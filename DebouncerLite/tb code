module tb_DebouncerLite;

    reg clk, reset, noisy_in;
    wire clean_out;

    DebouncerLite #(3) uut (
        .clk(clk),
        .reset(reset),
        .noisy_in(noisy_in),
        .clean_out(clean_out)
    );

    // Clock generation
    initial begin
        clk = 0;
        forever #5 clk = ~clk;  // 10 time units clock period
    end
  initial begin
    $dumpfile("dump.vcd");
    $dumpvars(0,tb_DebouncerLite);
  end

    // Stimulus
    initial begin
        $display("Time\tnoisy_in\tclean_out");
        $monitor("%0t\t%b\t\t%b", $time, noisy_in, clean_out);

        // Reset system
        reset = 1; noisy_in = 0; #10;
        reset = 0;

        // Apply noisy signal (simulate bouncing)
        noisy_in = 1; #10;
        noisy_in = 0; #10;
        noisy_in = 1; #10;
        noisy_in = 1; #10;
        noisy_in = 1; #10; // should pass after this

        // Keep high
        noisy_in = 1; #30;

        // Now go low with some bounce
        noisy_in = 0; #10;
        noisy_in = 1; #10;
        noisy_in = 0; #10;
        noisy_in = 0; #10;
        noisy_in = 0; #30;

        $finish;
    end

endmodule
